---
title: "Data Visualisation and R"
author: Matthew Johnson
format: 
  revealjs:
    theme: league
    auto-stretch: false
    slide-tone: false
    slide-number: c/t
    css: style.css
knitr:
  opts_chunk:
    dev: png
    dev.args: { bg: "transparent" }
---







```{r}

# library(readabs)
library(ggplot2)
library(highcharter)
library(tidyr)
library(dplyr)

# emp <- readabs::read_abs_series(c('A84423354L', 'A84423690X'))
# save(data/emp, file = "emp.RData")
load("data/emp.RData")

# emp_region <- readabs::read_abs_series(c(
#   "A84599659L",  
#   "A84600019W",
#   "A84600187J", 
#   "A84599557X",
#   "A84600115W",  
#   "A84599851L",
#   "A84599923L",  
#   "A84600025T",
#   "A84600193C",  
#   "A84599665J",
#   "A84600031L",  
#   "A84599671C",
#   "A84599677T",  
#   "A84599683L",
#   "A84599929A",  
#   "A84600121T",
#   "A84600037A"
# ))
# save(data/emp_region, file = "emp_region.RData")
load("data/emp_region.RData")

regional_emp <- emp_region |>
  tidyr::separate(series, c("SA4_NAME21", "indicator", "persons"), sep = ";", remove = FALSE) |>
  dplyr::mutate(SA4_NAME21 = gsub(">>>|Victoria - ", "", SA4_NAME21) |> trimws("both")) |>
  dplyr::arrange(series_id, date) |>
  dplyr::mutate(value = slider::slide_mean(value, before = 2) |> round(1)) |>
  dplyr::filter(date == max(date))
  
```

## Data Visualisation and R

Using R for visualising data, examples based on 2 R packages 


# Introduction

- trained as a freshwater ecologist
- using R and python for almost 20 years
- Data Analyst for last 10 years
- worked for Monash University and EPA


## Department of Jobs Skills and Industry 


- data analysis
- modelling and statistical analysis
- economic analysis
- data driven web content



![](img/VSG DJSIR Logo_RGB_COOL GRAY 1.svg){.absolute bottom=0 right=0 width="876" height="264"}



# Why R 


## Why R for Data Visualisation

:::: {.columns}

::: {.column width="60%"}

R is not just for statistics

- Active Community
- Extensive capabilities


:::

::: {.column width="40%"}

:::: {.absolute bottom=0}
![](img/Rlogo.svg){fig-align="center"}
::::

:::

::::


## Why R for Data Visualisation

:::: {.columns}

::: {.column width="60%"}

R is not just for statistics

- Reporting and web frameworks
  * `rmarkdown`
  * `quarto`
  * `shiny`
  
- charting libraries

:::

::: {.column width="40%"}

:::: {.absolute bottom=0}
![](img/Rlogo.svg){fig-align="center"}
::::

:::

::::


# Examples

DJSIR content is interactive, accessible and up-to-date


## {background-color="white"}

### Tailored to client narrative 

Creative Industries

:::: {.v-center-container}
<iframe src="https://creative.vic.gov.au/__data/assets/git_bridge/0003/2168544/landing_employment.html" scrolling="yes" style="height: 579px;" width="80%"></iframe>
::::


## {background-color="white"}

### Matching client branding 

Creative Industries

:::: {.v-center-container}
<iframe src="https://creative.vic.gov.au/__data/assets/git_bridge/0003/2168544/business02_totshare.html" scrolling="yes" style="height: 434px;" width="100%"></iframe>
::::


## {background-color="white"}

### Detailed view and download options 

Victorian tourism

:::: {.v-center-container}
<iframe src="https://tourism.vic.gov.au/__data/assets/git_bridge/0007/2144194/total_charts_02.html" title="Domestic day data" style="height: 420px;" width="80%"></iframe>
::::


## {background-color="white"}

### Headline summaries 

Victorian tourism

:::: {.v-center-container}
<iframe src="https://tourism.vic.gov.au/__data/assets/git_bridge/0007/2144194/total_jumbo.html" title="Victorian tourism overview data" style="height: 400px;" width="100%"></iframe>
::::


## {background-color="white"}

### Broad overviews 

Victorian tourism


:::: {.v-center-container}
<iframe src="https://tourism.vic.gov.au/__data/assets/git_bridge/0007/2144194/dashboard_tourism_visitors.html" title="Tourism visitors summary widget" style="height: 567px;" width="100%"></iframe>
::::


# R for Data Visualisation


## Charting libraries

Many choices plus R's `htmlwidgets` framework

:::: {.columns}

::: {.column width="30%"}

 - [plotly](https://plot.ly/r)
 - [leaflet](http://rstudio.github.io/leaflet/)
 - [networkD3](http://christophergandrud.github.io/networkD3/)
 - [ggiraph](http://davidgohel.github.io/ggiraph)
 
:::

::: {.column width="70%"}

::: {.fragment .fade-in-then-out fragment-index=1}
interactive charts for web and publication
:::

::: {.fragment .fade-in-then-out fragment-index=2}
configurable interactive web mapping
:::

::: {.fragment .fade-in-then-out fragment-index=3}
interactive D3 network charts
:::

::: {.fragment .fade-in-then-out fragment-index=4}
makes `ggplot2` charts interactive 
:::




 
:::

::::
 
:::: {.absolute bottom=0 right=50}
<small>[http://gallery.htmlwidgets.org/](http://gallery.htmlwidgets.org/)</small>
::::


## Charting library examples

Creating and styling, line charts and choropleth maps


:::: {.columns}

::: {.column width="40%"}

::: {.fragment fragment-index=1}
`ggplot2`
:::

::: {.fragment fragment-index=2}
`highcharter`
:::

:::

::: {.column width="60%"}

::: {.fragment .fade-in-then-out fragment-index=1 }
<img src="https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/ggplot2.png" 
     align="right" 
     width="200" 
     style="max-width: 100%;">
:::

::: {.fragment .fade-in fragment-index=2}
<img src="https://jkunst.com/highcharter/logo.png" 
     align="right" 
     width="200" 
     style="max-width: 100%;">
:::

:::

::::

::: {.fragment .fade-in fragment-index=3}
`ggplot2` best suited for static documents like word or PDF
`highcharter` used for web based content
:::


# Data


## Victorian unemployment data

```{r}
emp |>
  dplyr::select(table_no, series, series_id, series_type, date, value)
```

:::: {.absolute bottom=0 right=50}
<small>Data from [ABS Labour Force](https://www.abs.gov.au/statistics/labour/employment-and-unemployment/labour-force-australia/latest-release)</small> 
::::


## Victorian regional unemployment data

```{r}
regional_emp |>
  dplyr::select(table_no, series, series_id, series_type, date, value) |>
  head(10)
```

:::: {.absolute bottom=0 right=50}
<small>Data is 3 month moving average from [ABS Detailed Labour force](https://www.abs.gov.au/statistics/labour/employment-and-unemployment/labour-force-australia-detailed/latest-release#all-data-downloads)</small>
::::


## Get spatial data

Use `sf` and `dplyr` packages to process spatial data

```{r}
#| echo: true
#| code-line-numbers: "|8"

library(sf)

sa4 <- sf::read_sf("data/SA4_2021_AUST_GDA2020.shp") |>
  dplyr::filter(STE_NAME21 == "Victoria",
                !(SA4_CODE21 %in% c("297", "299"))) |>
  dplyr::select(SA4_NAME21)

regional_employment <- dplyr::left_join(sa4, regional_emp)
```



```{r}
#| fig-width: 4
#| fig-height: 3
#| fig-align: left

plot(regional_employment["value"], main = NULL)
```




:::: {.absolute bottom=0 right=50}
<small>[ABS digital boundaries](https://www.abs.gov.au/statistics/standards/australian-statistical-geography-standard-asgs-edition-3/jul2021-jun2026/access-and-downloads/digital-boundary-files)</small>
::::


# ggplot2

:::: {.columns}

::: {.column width="60%"}

`ggplot2` was first developed in 2007. Based on the "grammar of graphics" it allows you to build a chart by iteratively adding components.

:::

::: {.column width="40%"}

:::: {.absolute bottom=0 right=50}
<img src="https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/ggplot2.png" 
     align="right" 
     width="200" 
     style="max-width: 100%;">
::::     

:::

::::


## ggplot2 line chart

```{r}
#| echo: true
#| code-line-numbers: "2|3|1,4,5,6,7,8"

gg_emp <- emp |>
  ggplot(aes(x = date, y = value, colour = series_type)) +
  geom_line() +
  scale_color_manual(values = c('#595959','#F8766D')) +
  labs(
    title = "Victorian unemployment rate", 
    subtitle = paste0("Monthly data since ", format(min(emp$date), "%B %Y")),
    y = "unemployment rate", x = "") 
```

```{r}
#| fig-width: 14
#| fig-height: 4.5
#| fig-align: center
gg_emp
```


## ggplot map

```{r}
#| echo: true
#| code-line-numbers: "2|3|1,4,5,6,7,8"

gg_map <- regional_employment |>
  ggplot(aes(fill = value)) +
  geom_sf() +
  scale_fill_gradient(low = "#E2E8F4",
                      high = "#02359A") + 
  labs(title = "Victorian regional unemployment rate",
       subtitle = paste0("Regional unemployment rates for ", 
                         format(max(regional_employment$date), "%B %Y")))
```


## ggplot map

```{r}
#| fig-width: 9
#| fig-height: 5
#| fig-align: center

gg_map 
```


## ggplot style

```{r}
#| echo: true
#| code-line-numbers: "2,3,4,5|7,8|10,11,12,13,14"

gg_style <- theme(
    plot.background = element_rect(fill = "#505050", color = "#505050"),
    plot.title = element_text(color = "#fefefe"),
    plot.subtitle = element_text(color = "#fefefe"),
    plot.margin = margin(10,10,10,10),
    
    panel.background = element_rect(fill = "#505050", color = "#505050"),
    panel.grid = element_blank(),
    
    legend.background = element_rect(fill='transparent', color = "#505050"), 
    legend.box.background = element_rect(fill='transparent'), 
    legend.text = element_text(size = rel(0.8), color = "#fefefe"),
    legend.text.align = NULL,
    legend.title = element_text(hjust = 0, color = "#fefefe")
  )

```


:::: {.absolute bottom=0 right=50}
<small>[https://ggplot2.tidyverse.org/reference/theme.html](https://ggplot2.tidyverse.org/reference/theme.html)</small>
::::


## ggplot styled map

```{r}
#| fig-width: 9
#| fig-height: 5
#| fig-align: center
#| echo: true

gg_map + theme_void() + gg_style
```


# highcharter

:::: {.columns}

::: {.column width="60%"}

`highcharter` package is a wrapper for the `highcharts` JS library

:::

::: {.column width="40%"}

:::: {.absolute bottom=0 right=50}
<img src="https://jkunst.com/highcharter/logo.png" 
     align="right" 
     width="200" 
     style="max-width: 100%;">
::::     

:::

::::


## highcharter line chart

```{r}
#| echo: true
#| code-line-numbers: "2|3|4,5|1,6,7,8"

hc_emp <- emp |>
  hchart(hcaes(x = date, y = value, group = series_type), type = "line") |>
  hc_title(text = "Victorian unemployment rate") |>
  hc_subtitle(text = paste0("Monthly data since ", 
                            format(min(emp$date), "%B %Y"))) |>
  hc_xAxis(title = list(text = NULL)) |>
  hc_yAxis(title = list(text = "unemployment rate"))
```

<br>

```{r}
#| out-width: "100%"
 
hc_emp |>
  hc_size(height = 300) |>
  hc_add_theme(hc_theme_ggplot2())
```


## highcharter maps

```{r}
#| echo: true
#| code-line-numbers: "2|1,3,4"

aus_map <- hcmap(
  "countries/au/au-all",
  borderWidth = 0.5,
  download_map_data = TRUE) 
```

```{r}
#| out-width: "40%"
#| out-extra: align-center
aus_map |>
  hc_size(width = 500, height = 500) |>
  hc_legend(enabled = FALSE) |>
  hc_credits(enabled = FALSE)
```

:::: {.absolute bottom=0 right=50}
<small>[https://code.highcharts.com/mapdata/](https://code.highcharts.com/mapdata/)</small>
::::


## highcharter map data

convert spatial data to geojson using `geojsonsf` 

```{r}
#| echo: true
#| code-line-numbers: "1|4|5|3"

library(geojsonsf)

regional_json <- regional_employment |>
  sf::st_simplify(dTolerance = 10) |>
  geojsonsf::sf_geojson() 
```


## highcharter map

```{r}
#| echo: true
#| code-line-numbers: "1|2,4,5|3,6,7,8,9|10|11,12,13,14|15,16,17"

hc_map <- highchart(type = "map") |>
  hc_add_series(
    name = "Unemployment",
    mapData = regional_json,
    data = regional_employment |> select(SA4_NAME21, value),
    value = "value",
    joinBy = "SA4_NAME21",
    borderWidth = 0.5
  ) |>
  hc_tooltip(pointFormat = "{point.SA4_NAME21}: {point.value}%") |>
  hc_colorAxis(min = min(regional_employment$value) |> floor(), 
               minColor = "#E2E8F4",
               max = max(regional_employment$value) |> ceiling(),
               maxColor = "#02359A") |>
  hc_title(text = "Victorian regional unemployment rate") |>
  hc_subtitle(text = paste0("Regional unemployment rates for ", 
                            format(max(regional_employment$date), "%B %Y")))

```


## highcharter map theme

<br>

```{r}
#| echo: true
#| code-line-numbers: "1,2|3,4,5,6,7,8|9,10,11|12,13,14"

hc_map_theme <- highcharter::hc_theme(
      chart = list(backgroundColor = "transparent"),
      title = list(style = list(
          color = "#fefefe",
          `font-weight` =  "bold",
          `font-size` = "1.5rem",
          `background-color` = "transparent"
        )),
      subtitle = list(style = list(
          color = "#fefefe"
        )),
      colorAxis = list(labels = list(
          style = list(
            color = "#fefefe"))))
```

:::: {.absolute bottom=0 right=50}
<small>[https://jkunst.com/highcharter/articles/themes.html](https://jkunst.com/highcharter/articles/themes.html)</small>
::::


## highcharter styled map 

```{r}
#| echo: true

hc_map |> hc_size(height = 500) |> hc_add_theme(hc_map_theme)
```


# Conclusion

- `ggplot2` and `highcharter` are versatile and adaptive
- both have similar coding semantics
- both are easily styled with custom themes



# The End


# Links {.appendix}


## This presentation

[source code](https://github.com/mrjoh3/data-vis-presentation/blob/main/index.qmd)

[slides](https://restlessdata.au/data-vis-presentation/)


## R resources

[https://ggplot2.tidyverse.org/index.html](https://ggplot2.tidyverse.org/index.html)

[https://jkunst.com/highcharter/](https://jkunst.com/highcharter/)

[https://r-graphics.org/](https://r-graphics.org/)

[https://ggplot2-book.org/](https://ggplot2-book.org/)

[http://gallery.htmlwidgets.org/](http://gallery.htmlwidgets.org/)


## DJSIR Public Content

[Victoria’s Economic Overview Portal](https://djsir.vic.gov.au/what-we-do/employment-and-small-business/victorian-economy)

[Victorian Labour Force](https://djsir.vic.gov.au/victorian-labour-force)

[Victoria’s global trade](https://global.vic.gov.au/our-programs-and-services/our-programs/victorian-trade-exports)

[Victorian food and fibre exports](https://global.vic.gov.au/news-events-and-resources/resource/victorian-food-and-fibre-interactive-export-data-dashboard)

[Victoria’s creative economy](https://creative.vic.gov.au/resources/data-insights/victorias-creative-economy)

[Tourism in Victoria](https://tourism.vic.gov.au/research-and-insights)





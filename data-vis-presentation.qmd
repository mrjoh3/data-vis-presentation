---
title: "Data Visualisation and R"
format: 
  revealjs:
    theme: league
    auto-stretch: false
    slide-tone: true
    slide-number: c/t
    css: style.css
knitr:
  opts_chunk:
    dev: png
    dev.args: { bg: "transparent" }
---







```{r}

# library(leaflet)
# library(leaflet.providers)
# library(readabs)
library(ggplot2)
library(highcharter)
library(tidyr)
library(dplyr)


# 
# lat = -37.730202
# lon = 145.042387
# 
# basemap <- leaflet() %>%
#   addProviderTiles("CartoDB.Positron", group = 'Default') |>
#   #addProviderTiles("Esri.WorldImagery", group = 'Esri Imagery') |>
#   setView(lng = lon, lat = lat, zoom = 10) 


# emp <- readabs::read_abs_series(c('A84423354L', 'A84423690X'))
# save(data/emp, file = "emp.RData")
load("data/emp.RData")

# emp_region <- readabs::read_abs_series(c(
#   "A84599659L",  
#   "A84600019W",
#   "A84600187J", 
#   "A84599557X",
#   "A84600115W",  
#   "A84599851L",
#   "A84599923L",  
#   "A84600025T",
#   "A84600193C",  
#   "A84599665J",
#   "A84600031L",  
#   "A84599671C",
#   "A84599677T",  
#   "A84599683L",
#   "A84599929A",  
#   "A84600121T",
#   "A84600037A"
# ))
# save(data/emp_region, file = "emp_region.RData")
load("data/emp_region.RData")



regional_emp <- emp_region |>
  tidyr::separate(series, c("SA4_NAME21", "indicator", "persons"), sep = ";", remove = FALSE) |>
  dplyr::mutate(SA4_NAME21 = gsub(">>>|Victoria - ", "", SA4_NAME21) |> trimws("both")) |>
  dplyr::arrange(series_id, date) |>
  dplyr::mutate(value = slider::slide_mean(value, before = 2) |> round(1)) |>
  dplyr::filter(date == max(date))


  
```





## Introduction


- trained as a freshwater ecologist
- using R and python for almost 20 years
- Data Analyst for last 10 years
- worked for Monash University and EPA




## Department of Jobs Skills and Industry 


- data analysis
- economic analysis
- data driven web content



![](img/VSG DJSIR Logo_RGB_COOL GRAY 1.svg){.absolute bottom=0 right=0 width="876" height="264"}



## Creative Industries {background-color="white"}


:::: {.v-center-container}
<iframe src="https://creative.vic.gov.au/__data/assets/git_bridge/0003/2168544/landing_employment.html" scrolling="yes" style="height: 579px;" width="80%"></iframe>
::::






## Creative Industries {background-color="white"}


:::: {.v-center-container}
<iframe src="https://creative.vic.gov.au/__data/assets/git_bridge/0003/2168544/business02_totshare.html" scrolling="yes" style="height: 434px;" width="100%"></iframe>
::::




## Victorian tourism {background-color="white"}

:::: {.v-center-container}
<iframe src="https://tourism.vic.gov.au/__data/assets/git_bridge/0007/2144194/total_charts_02.html" title="Domestic day data" style="height: 420px;" width="80%"></iframe>
::::




## Victorian tourism {background-color="white"}

:::: {.v-center-container}
<iframe src="https://tourism.vic.gov.au/__data/assets/git_bridge/0007/2144194/total_jumbo.html" title="Victorian tourism overview data" style="height: 400px;" width="100%"></iframe>
::::




## Victorian tourism {background-color="white"}

:::: {.v-center-container}
<iframe src="https://tourism.vic.gov.au/__data/assets/git_bridge/0007/2144194/dashboard_tourism_visitors.html" title="Tourism visitors summary widget" style="height: 567px;" width="100%"></iframe>
::::





## Why R for Data Visualisation



:::: {.columns}


::: {.column width="60%"}

R is not just for statistics

- Active Community
- Extensive capabilities
- Diverse reporting and web capabilities


:::

::: {.column width="40%"}

:::: {.absolute bottom=0}
![](img/Rlogo.svg){fig-align="center"}
::::


:::

::::








## Why R for Data Visualisation



:::: {.columns}


::: {.column width="60%"}

R is not just for statistics






- publication frameworks
  * `rmarkdown`
  * `quarto`
  * `shiny`
- charting libraries


:::

::: {.column width="40%"}

:::: {.absolute bottom=0}
![](img/Rlogo.svg){fig-align="center"}
::::


:::

::::







## Charting Libraries


:::: {.columns}


::: {.column width="40%"}


::: {.fragment fragment-index=1}
`ggplot2`
:::

::: {.fragment fragment-index=2}
`highcharter`
:::



:::

::: {.column width="60%"}

::: {.fragment .fade-in-then-out fragment-index=1 }
<img src="https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/ggplot2.png" 
     align="right" 
     width="200" 
     style="max-width: 100%;">
:::

::: {.fragment .fade-in-then-out fragment-index=2}
<img src="https://jkunst.com/highcharter/logo.png" 
     align="right" 
     width="200" 
     style="max-width: 100%;">
:::






:::

::::



## Some other charting libs

R's `htmlwidgets` framework

 - [plotly](https://plot.ly/r)
 - [leaflet](http://rstudio.github.io/leaflet/)
 - [networkD3](http://christophergandrud.github.io/networkD3/)
 - [ggiraph](http://davidgohel.github.io/ggiraph)
 
 
:::: {.absolute bottom=0 right=50}
<small>[http://gallery.htmlwidgets.org/](http://gallery.htmlwidgets.org/)</small>
::::



## Victorian unemployment data

```{r}
emp |>
  dplyr::select(table_no, series, series_id, series_type, date, value)
```
:::: {.absolute bottom=0 right=50}
<small>Data from [ABS Labour Force](https://www.abs.gov.au/statistics/labour/employment-and-unemployment/labour-force-australia/latest-release)</small> 
::::

## Victorian regional unemployment data

```{r}
regional_emp |>
  dplyr::select(table_no, series, series_id, series_type, date, value) |>
  head(10)
```

:::: {.absolute bottom=0 right=50}
<small>Data from [ABS Detailed Labour force](https://www.abs.gov.au/statistics/labour/employment-and-unemployment/labour-force-australia-detailed/latest-release#all-data-downloads)</small>
::::


## Get spatial data



Use `sf` package to process spatial data

```{r}
#| echo: true

library(sf)

sa4 <- sf::read_sf("data/SA4_2021_AUST_GDA2020.shp") |>
  dplyr::filter(STE_NAME21 == "Victoria",
                !(SA4_CODE21 %in% c("297", "299"))) |>
  dplyr::select(SA4_NAME21)

regional_employment <- left_join(sa4, regional_emp)
```


:::: {.absolute bottom=0 right=50}
<small>[ABS digital boundaries](https://www.abs.gov.au/statistics/standards/australian-statistical-geography-standard-asgs-edition-3/jul2021-jun2026/access-and-downloads/digital-boundary-files)</small>
::::


## ggplot2

`ggplot2` was first developed in 2007. Based on the "grammar of graphics" it allows you to build a chart by iteratively adding components.

:::: {.absolute bottom=0 right=50}
<img src="https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/ggplot2.png" 
     align="right" 
     width="200" 
     style="max-width: 100%;">
::::     



## ggplot2 line chart

```{r}
#| echo: true

gg_emp <- emp |>
  ggplot(aes(x = date, y = value, colour = series_type)) +
  geom_line() +
  labs(
    title = "Victorian unemployment rate", 
    subtitle = paste0("Data from ", format(min(emp$date), "%B %Y")),
    y = "unemployment rate", x = "") 
```

<br>

```{r}
#| fig-width: 14
#| fig-height: 4.5
#| fig-align: center
gg_emp
```






## ggplot map

```{r}
#| echo: true

gg_map <- regional_employment |>
  ggplot(aes(fill = value)) +
  geom_sf() +
  labs(title = "Victorian regional unemployment rate",
       subtitle = paste0("Regional unemployment rates for ", 
                         format(max(regional_employment$date), "%B %Y")))
```


## ggplot map

```{r}
#| fig-width: 9
#| fig-height: 5
#| fig-align: center

gg_map 
```


## ggplot style

```{r}
#| echo: true

gg_style <- theme(
    plot.background = element_rect(fill = "#505050", color = "#505050"),
    plot.title = element_text(color = "#fefefe"),
    plot.subtitle = element_text(color = "#fefefe"),
    plot.margin = margin(10,10,10,10),
    panel.background = element_rect(fill = "#505050", color = "#505050"),
    panel.grid = element_blank(),
    legend.background = element_rect(fill='transparent', color = "#505050"), 
    legend.box.background = element_rect(fill='transparent'), 
    legend.text = element_text(size = rel(0.8), color = "#fefefe"),
    legend.text.align = NULL,
    legend.title = element_text(hjust = 0, color = "#fefefe")
  )

```


## ggplot styled map

```{r}
#| fig-width: 9
#| fig-height: 6
#| fig-align: center

gg_map + 
  theme_void() +
  gg_style
```






## highcharter

`highcharter` package is a wrapper for the `highcharts` JS library

:::: {.absolute bottom=0 right=50}
<img src="https://jkunst.com/highcharter/logo.png" 
     align="right" 
     width="200" 
     style="max-width: 100%;">
::::     







## highcharter line chart


```{r}
#| echo: true
hc_emp <- emp |>
  hchart(hcaes(x = date, y = value, group = series_type), type = "line") |>
  hc_title(text = "Victorian unemployment rate") |>
  hc_subtitle(text = paste0("Data from ", format(min(emp$date), "%B %Y"))) |>
  hc_xAxis(title = list(text = NULL)) |>
  hc_yAxis(title = list(text = "unemployment rate"))
```


<br>

```{r}
#| out-width: "100%"
 
hc_emp |>
  hc_size(height = 350) |>
  hc_add_theme(hc_theme_ggplot2())
```




## highcharter map data


```{r}
#| echo: true

aus_map <- hcmap(
  "countries/au/au-all",
  download_map_data = TRUE) |>
  hc_size(height = 300, width = 250)
```

:::: {.center .fragment width="400" height="350"}

```{r}
#| out-width: "40%"
#| out-extra: align-center
aus_map
```

::::

:::: {.absolute bottom=0 right=50}
<small>[https://code.highcharts.com/mapdata/](https://code.highcharts.com/mapdata/)</small>
::::



## highcharter map data

```{r}
#| echo: true

library(geojsonsf)

# convert shp to json
regional_json <- regional_employment |>
  sf::st_simplify(dTolerance = 10) |>
  geojsonsf::sf_geojson() 
```




## highcharter map


```{r}
#| echo: true

hc_map <- highchart(type = "map") |>
  hc_add_series(
    name = "Unemployment",
    mapData = regional_json,
    data = regional_employment |> select(SA4_NAME21, value),
    value = "value",
    joinBy = "SA4_NAME21"  
  ) |>
  hc_colorAxis(min = min(regional_employment$value) |> floor(), 
               max = max(regional_employment$value) |> ceiling()) |>
  hc_title(text = "Victorian regional unemployment rate") |>
  hc_subtitle(text = paste0("Regional unemployment rates for ", 
                            format(max(regional_employment$date), "%B %Y")))

```


## highcharter map

```{r}
hc_map |>
  hc_add_theme(hc_theme_ggplot2())
```


## Links

[https://ggplot2.tidyverse.org/index.html](https://ggplot2.tidyverse.org/index.html)

[https://jkunst.com/highcharter/](https://jkunst.com/highcharter/)

[https://r-graphics.org/](https://r-graphics.org/)

[https://ggplot2-book.org/](https://ggplot2-book.org/)



[Victoria’s Economic Overview Portal](https://djsir.vic.gov.au/what-we-do/employment-and-small-business/victorian-economy)

[Victorian Labour Force](https://djsir.vic.gov.au/victorian-labour-force)

[Victoria’s global trade](https://global.vic.gov.au/our-programs-and-services/our-programs/victorian-trade-exports)

[Victorian food and fibre exports](https://global.vic.gov.au/news-events-and-resources/resource/victorian-food-and-fibre-interactive-export-data-dashboard)

[Victoria’s creative economy](https://creative.vic.gov.au/resources/data-insights/victorias-creative-economy)

[Tourism in Victoria](https://tourism.vic.gov.au/research-and-insights)




